

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Apr 18 20:25:06 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	idataCOMRAM
    29  000A64                     __pidataCOMRAM:
    30                           	opt stack 0
    31                           
    32                           ;initializer for _String1
    33  000A64  01                 	db	low STR_1
    34  000A65  08                 	db	high STR_1
    35                           
    36                           ;initializer for _String2
    37  000A66  12                 	db	low STR_2
    38  000A67  08                 	db	high STR_2
    39                           
    40                           	psect	nvCOMRAM
    41  000013                     __pnvCOMRAM:
    42                           	opt stack 0
    43  000013                     _k:
    44                           	opt stack 0
    45  000013                     	ds	2
    46  0000                     _ADRES	set	4035
    47  0000                     _ADCON0	set	4034
    48  0000                     _ADCON1	set	4033
    49  0000                     _ADCON2	set	4032
    50  0000                     _LATB	set	3978
    51  0000                     _LATDbits	set	3980
    52  0000                     _PORTCbits	set	3970
    53  0000                     _PORTDbits	set	3971
    54  0000                     _TRISAbits	set	3986
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISCbits	set	3988
    57  0000                     _TRISDbits	set	3989
    58  0000                     _GODONE	set	32273
    59  0000                     _GO_DONE	set	32273
    60                           
    61                           	psect	smallconst
    62  000800                     __psmallconst:
    63                           	opt stack 0
    64  000800  00                 	db	0
    65  000801                     STR_1:
    66  000801  61                 	db	97	;'a'
    67  000802  6C                 	db	108	;'l'
    68  000803  63                 	db	99	;'c'
    69  000804  6F                 	db	111	;'o'
    70  000805  68                 	db	104	;'h'
    71  000806  6F                 	db	111	;'o'
    72  000807  6C                 	db	108	;'l'
    73  000808  20                 	db	32
    74  000809  64                 	db	100	;'d'
    75  00080A  65                 	db	101	;'e'
    76  00080B  74                 	db	116	;'t'
    77  00080C  65                 	db	101	;'e'
    78  00080D  63                 	db	99	;'c'
    79  00080E  74                 	db	116	;'t'
    80  00080F  65                 	db	101	;'e'
    81  000810  64                 	db	100	;'d'
    82  000811  00                 	db	0
    83  000812                     STR_2:
    84  000812  20                 	db	32
    85  000813  44                 	db	68	;'D'
    86  000814  52                 	db	82	;'R'
    87  000815  49                 	db	73	;'I'
    88  000816  56                 	db	86	;'V'
    89  000817  45                 	db	69	;'E'
    90  000818  20                 	db	32
    91  000819  53                 	db	83	;'S'
    92  00081A  41                 	db	65	;'A'
    93  00081B  46                 	db	70	;'F'
    94  00081C  45                 	db	69	;'E'
    95  00081D  00                 	db	0
    96                           
    97                           ; #config settings
    98  00081E  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	cinit
   101  000924                     __pcinit:
   102                           	opt stack 0
   103  000924                     start_initialization:
   104                           	opt stack 0
   105  000924                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (4 bytes)
   109  000924  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   110  000926  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   111  000928  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   112  00092A  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   113                           
   114                           ; Initialize objects allocated to COMRAM (4 bytes)
   115                           ; load TBLPTR registers with __pidataCOMRAM
   116  00092C  0E64               	movlw	low __pidataCOMRAM
   117  00092E  6EF6               	movwf	tblptrl,c
   118  000930  0E0A               	movlw	high __pidataCOMRAM
   119  000932  6EF7               	movwf	tblptrh,c
   120  000934  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   121  000936  6EF8               	movwf	tblptru,c
   122  000938  EE00  F00F         	lfsr	0,__pdataCOMRAM
   123  00093C  EE10 F004          	lfsr	1,4
   124  000940                     copy_data0:
   125  000940  0009               	tblrd		*+
   126  000942  CFF5 FFEE          	movff	tablat,postinc0
   127  000946  50E5               	movf	postdec1,w,c
   128  000948  50E1               	movf	fsr1l,w,c
   129  00094A  E1FA               	bnz	copy_data0
   130  00094C                     end_of_initialization:
   131                           	opt stack 0
   132  00094C                     __end_of__initialization:
   133                           	opt stack 0
   134  00094C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   135  00094E  6EF8               	movwf	tblptru,c
   136  000950  0E08               	movlw	high __Lsmallconst
   137  000952  6EF7               	movwf	tblptrh,c
   138  000954  0100               	movlb	0
   139  000956  EF17  F005         	goto	_main	;jump to C main() function
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	bssCOMRAM
   149  00000B                     __pbssCOMRAM:
   150                           	opt stack 0
   151  00000B                     _i:
   152                           	opt stack 0
   153  00000B                     	ds	2
   154  00000D                     _j:
   155                           	opt stack 0
   156  00000D                     	ds	2
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           postdec1	equ	0xFE5
   163                           fsr1l	equ	0xFE1
   164                           
   165                           	psect	dataCOMRAM
   166  00000F                     __pdataCOMRAM:
   167                           	opt stack 0
   168  00000F                     _String1:
   169                           	opt stack 0
   170  00000F                     	ds	2
   171  000011                     _String2:
   172                           	opt stack 0
   173  000011                     	ds	2
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           postdec1	equ	0xFE5
   180                           fsr1l	equ	0xFE1
   181                           
   182                           	psect	cstackCOMRAM
   183  000001                     __pcstackCOMRAM:
   184                           	opt stack 0
   185  000001                     ?_Read_ADC:
   186                           	opt stack 0
   187  000001                     ?___wmul:
   188                           	opt stack 0
   189  000001                     SendInstruction@command:
   190                           	opt stack 0
   191  000001                     SendData@lcddata:
   192                           	opt stack 0
   193  000001                     ___wmul@multiplier:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x0
   197  000001                     	ds	1
   198  000002                     mq3@key:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x1
   202  000002                     	ds	1
   203  000003                     Read_ADC@Ch:
   204                           	opt stack 0
   205  000003                     ___wmul@multiplicand:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x2
   209  000003                     	ds	2
   210  000005                     ___wmul@product:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x4
   214  000005                     	ds	2
   215  000007                     ?_DisplayResult:
   216                           	opt stack 0
   217  000007                     DisplayResult@ADCVal:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x6
   221  000007                     	ds	2
   222  000009                     LDR_Result@ldr:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x8
   226  000009                     	ds	2
   227  00000B                     tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           ; 1 bytes @ 0xA
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 10 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         0       0       0       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels required when called:    4
   261 ;; This function calls:
   262 ;;		_LDR_Result
   263 ;;		_con
   264 ;;		_mq3
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text0
   271  000A2E                     __ptext0:
   272                           	opt stack 0
   273  000A2E                     _main:
   274                           	opt stack 27
   275                           
   276                           ;main.c: 11: con();
   277                           
   278                           ;incstack = 0
   279  000A2E  EC0C  F005         	call	_con	;wreg free
   280  000A32                     l892:
   281                           
   282                           ;main.c: 13: {
   283                           ;main.c: 14: LDR_Result();
   284  000A32  EC75  F004         	call	_LDR_Result	;wreg free
   285                           
   286                           ;main.c: 15: mq3();
   287  000A36  EC10  F004         	call	_mq3	;wreg free
   288  000A3A  D7FB               	goto	l892
   289  000A3C                     __end_of_main:
   290                           	opt stack 0
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299 ;; *************** function _mq3 *****************
   300 ;; Defined at:
   301 ;;		line 32 in file "MQ3.h"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  key             1    1[COMRAM] unsigned char 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  2   83[None  ] int 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         1       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         1       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        1 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    3
   322 ;; This function calls:
   323 ;;		_InitLCD
   324 ;;		_SendData
   325 ;;		_SendInstruction
   326 ;;		_delay
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text1
   333  000820                     __ptext1:
   334                           	opt stack 0
   335  000820                     _mq3:
   336                           	opt stack 27
   337                           
   338                           ;MQ3.h: 34: unsigned char key =0;
   339                           
   340                           ;incstack = 0
   341  000820  0E00               	movlw	0
   342  000822  6E02               	movwf	mq3@key,c
   343                           
   344                           ;MQ3.h: 35: InitLCD();
   345  000824  ECEE  F004         	call	_InitLCD	;wreg free
   346                           
   347                           ;MQ3.h: 36: if(PORTDbits.RD3==1) key=1;
   348  000828  A683               	btfss	3971,3,c	;volatile
   349  00082A  D002               	goto	l826
   350  00082C  0E01               	movlw	1
   351  00082E  6E02               	movwf	mq3@key,c
   352  000830                     l826:
   353                           
   354                           ;MQ3.h: 37: if(PORTDbits.RD3==0) key=0;
   355  000830  B683               	btfsc	3971,3,c	;volatile
   356  000832  D002               	goto	l830
   357  000834  0E00               	movlw	0
   358  000836  6E02               	movwf	mq3@key,c
   359  000838                     l830:
   360                           
   361                           ;MQ3.h: 39: if(key==1)
   362  000838  0402               	decf	mq3@key,w,c
   363  00083A  A4D8               	btfss	status,2,c
   364  00083C  D018               	goto	l842
   365                           
   366                           ;MQ3.h: 40: {
   367                           ;MQ3.h: 41: PORTDbits.RD5=0;
   368  00083E  9A83               	bcf	3971,5,c	;volatile
   369                           
   370                           ;MQ3.h: 42: PORTCbits.RC7=1;
   371  000840  8E82               	bsf	3970,7,c	;volatile
   372                           
   373                           ;MQ3.h: 43: while(*String1)
   374  000842  D00A               	goto	l838
   375  000844                     l834:
   376                           
   377                           ;MQ3.h: 44: {
   378                           ;MQ3.h: 45: SendData(*String1);
   379  000844  C00F  FFF6         	movff	_String1,tblptrl
   380  000848  C010  FFF7         	movff	_String1+1,tblptrh
   381  00084C                     	if	0	;tblptru may be non-zero
   382  00084C                     	endif
   383  00084C                     	if	0	;tblptru may be non-zero
   384  00084C                     	endif
   385  00084C  0008               	tblrd		*
   386  00084E  50F5               	movf	tablat,w,c
   387  000850  EC1E  F005         	call	_SendData
   388                           
   389                           ;MQ3.h: 46: *String1++;
   390  000854  4A0F               	infsnz	_String1,f,c
   391  000856  2A10               	incf	_String1+1,f,c
   392  000858                     l838:
   393  000858  C00F  FFF6         	movff	_String1,tblptrl
   394  00085C  C010  FFF7         	movff	_String1+1,tblptrh
   395  000860                     	if	0	;tblptru may be non-zero
   396  000860                     	endif
   397  000860                     	if	0	;tblptru may be non-zero
   398  000860                     	endif
   399  000860  0008               	tblrd		*
   400  000862  50F5               	movf	tablat,w,c
   401  000864  0900               	iorlw	0
   402  000866  A4D8               	btfss	status,2,c
   403  000868  D7ED               	goto	l834
   404                           
   405                           ;MQ3.h: 47: }
   406                           ;MQ3.h: 48: delay();
   407  00086A  ECAD  F004         	call	_delay	;wreg free
   408  00086E                     l842:
   409                           
   410                           ;MQ3.h: 49: }
   411                           ;MQ3.h: 50: if(key==0)
   412  00086E  5002               	movf	mq3@key,w,c
   413  000870  A4D8               	btfss	status,2,c
   414  000872  0012               	return	
   415                           
   416                           ;MQ3.h: 51: {
   417                           ;MQ3.h: 52: PORTDbits.RD4=0;
   418  000874  9883               	bcf	3971,4,c	;volatile
   419                           
   420                           ;MQ3.h: 53: PORTCbits.RC7=0;
   421  000876  9E82               	bcf	3970,7,c	;volatile
   422                           
   423                           ;MQ3.h: 54: SendInstruction(0xC0);
   424  000878  0EC0               	movlw	192
   425  00087A  EC25  F005         	call	_SendInstruction
   426                           
   427                           ;MQ3.h: 55: while(*String2)
   428  00087E  D00A               	goto	l852
   429  000880                     l848:
   430                           
   431                           ;MQ3.h: 56: {
   432                           ;MQ3.h: 57: SendData(*String2);
   433  000880  C011  FFF6         	movff	_String2,tblptrl
   434  000884  C012  FFF7         	movff	_String2+1,tblptrh
   435  000888                     	if	0	;tblptru may be non-zero
   436  000888                     	endif
   437  000888                     	if	0	;tblptru may be non-zero
   438  000888                     	endif
   439  000888  0008               	tblrd		*
   440  00088A  50F5               	movf	tablat,w,c
   441  00088C  EC1E  F005         	call	_SendData
   442                           
   443                           ;MQ3.h: 58: *String2++;
   444  000890  4A11               	infsnz	_String2,f,c
   445  000892  2A12               	incf	_String2+1,f,c
   446  000894                     l852:
   447  000894  C011  FFF6         	movff	_String2,tblptrl
   448  000898  C012  FFF7         	movff	_String2+1,tblptrh
   449  00089C                     	if	0	;tblptru may be non-zero
   450  00089C                     	endif
   451  00089C                     	if	0	;tblptru may be non-zero
   452  00089C                     	endif
   453  00089C  0008               	tblrd		*
   454  00089E  50F5               	movf	tablat,w,c
   455  0008A0  0900               	iorlw	0
   456  0008A2  A4D8               	btfss	status,2,c
   457  0008A4  D7ED               	goto	l848
   458                           
   459                           ;MQ3.h: 59: }
   460                           ;MQ3.h: 60: delay();
   461  0008A6  ECAD  F004         	call	_delay	;wreg free
   462  0008AA  0012               	return	
   463  0008AC                     __end_of_mq3:
   464                           	opt stack 0
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           status	equ	0xFD8
   473                           
   474 ;; *************** function _delay *****************
   475 ;; Defined at:
   476 ;;		line 24 in file "MQ3.h"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_mq3
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text2
   504  00095A                     __ptext2:
   505                           	opt stack 0
   506  00095A                     _delay:
   507                           	opt stack 29
   508                           
   509                           ;MQ3.h: 26: for(i = 0; i < 100; i++)
   510                           
   511                           ;incstack = 0
   512  00095A  0E00               	movlw	0
   513  00095C  6E0C               	movwf	_i+1,c
   514  00095E  0E00               	movlw	0
   515  000960  6E0B               	movwf	_i,c
   516  000962                     l772:
   517  000962  500C               	movf	_i+1,w,c
   518  000964  E114               	bnz	l81
   519  000966  0E64               	movlw	100
   520  000968  5C0B               	subwf	_i,w,c
   521  00096A  B0D8               	btfsc	status,0,c
   522  00096C  0012               	return	
   523                           
   524                           ;MQ3.h: 27: for(j=0;j<500;j++);
   525  00096E  0E00               	movlw	0
   526  000970  6E0E               	movwf	_j+1,c
   527  000972  0E00               	movlw	0
   528  000974  6E0D               	movwf	_j,c
   529  000976                     l778:
   530  000976  0EF4               	movlw	244
   531  000978  5C0D               	subwf	_j,w,c
   532  00097A  0E01               	movlw	1
   533  00097C  580E               	subwfb	_j+1,w,c
   534  00097E  B0D8               	btfsc	status,0,c
   535  000980  D003               	goto	l786
   536  000982  4A0D               	infsnz	_j,f,c
   537  000984  2A0E               	incf	_j+1,f,c
   538  000986  D7F7               	goto	l778
   539  000988                     l786:
   540  000988  4A0B               	infsnz	_i,f,c
   541  00098A  2A0C               	incf	_i+1,f,c
   542  00098C  D7EA               	goto	l772
   543  00098E                     l81:
   544  00098E  0012               	return		;funcret
   545  000990                     __end_of_delay:
   546                           	opt stack 0
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           status	equ	0xFD8
   555                           
   556 ;; *************** function _SendData *****************
   557 ;; Defined at:
   558 ;;		line 48 in file "lcd.h"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  lcddata         1    wreg     unsigned char 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  lcddata         1    0[COMRAM] unsigned char 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         1       0       0       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0
   575 ;;      Totals:         1       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        1 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    1
   579 ;; This function calls:
   580 ;;		_strobe
   581 ;; This function is called by:
   582 ;;		_mq3
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text3
   587  000A3C                     __ptext3:
   588                           	opt stack 0
   589  000A3C                     _SendData:
   590                           	opt stack 28
   591                           
   592                           ;incstack = 0
   593                           ;SendData@lcddata stored from wreg
   594  000A3C  6E01               	movwf	SendData@lcddata,c
   595                           
   596                           ;lcd.h: 50: LATDbits.LD6 = 1;
   597  000A3E  8C8C               	bsf	3980,6,c	;volatile
   598                           
   599                           ;lcd.h: 51: LATB = lcddata;
   600  000A40  C001  FF8A         	movff	SendData@lcddata,3978	;volatile
   601                           
   602                           ;lcd.h: 52: strobe();
   603  000A44  EC56  F004         	call	_strobe	;wreg free
   604  000A48  0012               	return		;funcret
   605  000A4A                     __end_of_SendData:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           postinc0	equ	0xFEE
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           status	equ	0xFD8
   615                           
   616 ;; *************** function _InitLCD *****************
   617 ;; Defined at:
   618 ;;		line 54 in file "lcd.h"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    2
   639 ;; This function calls:
   640 ;;		_SendInstruction
   641 ;; This function is called by:
   642 ;;		_mq3
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text4
   647  0009DC                     __ptext4:
   648                           	opt stack 0
   649  0009DC                     _InitLCD:
   650                           	opt stack 27
   651                           
   652                           ;lcd.h: 56: SendInstruction(0x38);
   653                           
   654                           ;incstack = 0
   655  0009DC  0E38               	movlw	56
   656  0009DE  EC25  F005         	call	_SendInstruction
   657                           
   658                           ;lcd.h: 57: SendInstruction(0x06);
   659  0009E2  0E06               	movlw	6
   660  0009E4  EC25  F005         	call	_SendInstruction
   661                           
   662                           ;lcd.h: 58: SendInstruction(0x0C);
   663  0009E8  0E0C               	movlw	12
   664  0009EA  EC25  F005         	call	_SendInstruction
   665                           
   666                           ;lcd.h: 59: SendInstruction(0x01);
   667  0009EE  0E01               	movlw	1
   668  0009F0  EC25  F005         	call	_SendInstruction
   669                           
   670                           ;lcd.h: 60: SendInstruction(0x80);
   671  0009F4  0E80               	movlw	128
   672  0009F6  EC25  F005         	call	_SendInstruction
   673  0009FA  0012               	return		;funcret
   674  0009FC                     __end_of_InitLCD:
   675                           	opt stack 0
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           postdec1	equ	0xFE5
   682                           fsr1l	equ	0xFE1
   683                           status	equ	0xFD8
   684                           
   685 ;; *************** function _SendInstruction *****************
   686 ;; Defined at:
   687 ;;		line 42 in file "lcd.h"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  command         1    wreg     unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  command         1    0[COMRAM] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0
   704 ;;      Totals:         1       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        1 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    1
   708 ;; This function calls:
   709 ;;		_strobe
   710 ;; This function is called by:
   711 ;;		_InitLCD
   712 ;;		_mq3
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text5
   717  000A4A                     __ptext5:
   718                           	opt stack 0
   719  000A4A                     _SendInstruction:
   720                           	opt stack 28
   721                           
   722                           ;incstack = 0
   723                           ;SendInstruction@command stored from wreg
   724  000A4A  6E01               	movwf	SendInstruction@command,c
   725                           
   726                           ;lcd.h: 44: LATDbits.LD6 = 0;
   727  000A4C  9C8C               	bcf	3980,6,c	;volatile
   728                           
   729                           ;lcd.h: 45: LATB = command;
   730  000A4E  C001  FF8A         	movff	SendInstruction@command,3978	;volatile
   731                           
   732                           ;lcd.h: 46: strobe();
   733  000A52  EC56  F004         	call	_strobe	;wreg free
   734  000A56  0012               	return		;funcret
   735  000A58                     __end_of_SendInstruction:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           tblptrl	equ	0xFF6
   740                           tablat	equ	0xFF5
   741                           postinc0	equ	0xFEE
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           status	equ	0xFD8
   745                           
   746 ;; *************** function _strobe *****************
   747 ;; Defined at:
   748 ;;		line 31 in file "lcd.h"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   762 ;;      Params:         0       0       0       0       0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_SendInstruction
   772 ;;		_SendData
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text6
   777  0008AC                     __ptext6:
   778                           	opt stack 0
   779  0008AC                     _strobe:
   780                           	opt stack 28
   781                           
   782                           ;lcd.h: 33: LATDbits.LD7 = 1;
   783                           
   784                           ;incstack = 0
   785  0008AC  8E8C               	bsf	3980,7,c	;volatile
   786                           
   787                           ;lcd.h: 34: for(i = 0; i < 5; i++)
   788  0008AE  0E00               	movlw	0
   789  0008B0  6E0C               	movwf	_i+1,c
   790  0008B2  0E00               	movlw	0
   791  0008B4  6E0B               	movwf	_i,c
   792  0008B6  500C               	movf	_i+1,w,c
   793  0008B8  E116               	bnz	l39
   794  0008BA  0E05               	movlw	5
   795  0008BC  5C0B               	subwf	_i,w,c
   796  0008BE  B0D8               	btfsc	status,0,c
   797  0008C0  D012               	goto	l39
   798                           
   799                           ;lcd.h: 35: {
   800                           ;lcd.h: 36: for(j=0;j<100;j++);
   801  0008C2  0E00               	movlw	0
   802  0008C4  6E0E               	movwf	_j+1,c
   803  0008C6  0E00               	movlw	0
   804  0008C8  6E0D               	movwf	_j,c
   805  0008CA                     l724:
   806  0008CA  500E               	movf	_j+1,w,c
   807  0008CC  E107               	bnz	l732
   808  0008CE  0E64               	movlw	100
   809  0008D0  5C0D               	subwf	_j,w,c
   810  0008D2  B0D8               	btfsc	status,0,c
   811  0008D4  D003               	goto	l732
   812  0008D6  4A0D               	infsnz	_j,f,c
   813  0008D8  2A0E               	incf	_j+1,f,c
   814  0008DA  D7F7               	goto	l724
   815  0008DC                     l732:
   816  0008DC  4A0B               	infsnz	_i,f,c
   817  0008DE  2A0C               	incf	_i+1,f,c
   818  0008E0  500C               	movf	_i+1,w,c
   819  0008E2  E101               	bnz	u40
   820  0008E4  D7EA               	goto	L1
   821  0008E6                     u40:
   822  0008E6                     l39:
   823                           
   824                           ;lcd.h: 37: }
   825                           ;lcd.h: 38: LATDbits.LD7 = 0;
   826  0008E6  9E8C               	bcf	3980,7,c	;volatile
   827  0008E8  0012               	return		;funcret
   828  0008EA                     __end_of_strobe:
   829                           	opt stack 0
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           postinc0	equ	0xFEE
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _con *****************
   840 ;; Defined at:
   841 ;;		line 80 in file "setup.h"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text7
   869  000A18                     __ptext7:
   870                           	opt stack 0
   871  000A18                     _con:
   872                           	opt stack 30
   873                           
   874                           ;setup.h: 82: TRISB = 0x00;
   875                           
   876                           ;incstack = 0
   877  000A18  0E00               	movlw	0
   878  000A1A  6E93               	movwf	3987,c	;volatile
   879                           
   880                           ;setup.h: 83: TRISAbits.RA0= 1;
   881  000A1C  8092               	bsf	3986,0,c	;volatile
   882                           
   883                           ;setup.h: 84: TRISDbits.RD7 = 0;
   884  000A1E  9E95               	bcf	3989,7,c	;volatile
   885                           
   886                           ;setup.h: 85: TRISDbits.RD6 = 0;
   887  000A20  9C95               	bcf	3989,6,c	;volatile
   888                           
   889                           ;setup.h: 87: TRISDbits.TRISD5=0;
   890  000A22  9A95               	bcf	3989,5,c	;volatile
   891                           
   892                           ;setup.h: 88: TRISDbits.TRISD4=0;
   893  000A24  9895               	bcf	3989,4,c	;volatile
   894                           
   895                           ;setup.h: 90: TRISCbits.TRISC7=0;
   896  000A26  9E94               	bcf	3988,7,c	;volatile
   897                           
   898                           ;setup.h: 91: TRISCbits.TRISC1=0;
   899  000A28  9294               	bcf	3988,1,c	;volatile
   900                           
   901                           ;setup.h: 93: TRISDbits.TRISD3=1;
   902  000A2A  8695               	bsf	3989,3,c	;volatile
   903  000A2C  0012               	return		;funcret
   904  000A2E                     __end_of_con:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           postinc0	equ	0xFEE
   911                           postdec1	equ	0xFE5
   912                           fsr1l	equ	0xFE1
   913                           status	equ	0xFD8
   914                           
   915 ;; *************** function _LDR_Result *****************
   916 ;; Defined at:
   917 ;;		line 103 in file "ADC.h"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  ldr             2    8[COMRAM] unsigned short 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   931 ;;      Params:         0       0       0       0       0       0       0       0       0
   932 ;;      Locals:         2       0       0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0
   934 ;;      Totals:         2       0       0       0       0       0       0       0       0
   935 ;;Total ram usage:        2 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    2
   938 ;; This function calls:
   939 ;;		_ADCInit
   940 ;;		_DisplayResult
   941 ;;		_Read_ADC
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text8
   948  0008EA                     __ptext8:
   949                           	opt stack 0
   950  0008EA                     _LDR_Result:
   951                           	opt stack 28
   952                           
   953                           ;ADC.h: 106: ADCInit();
   954                           
   955                           ;incstack = 0
   956  0008EA  EC2C  F005         	call	_ADCInit	;wreg free
   957                           
   958                           ;ADC.h: 107: unsigned short ldr;
   959                           ;ADC.h: 108: ldr=Read_ADC(0);
   960  0008EE  0E00               	movlw	0
   961  0008F0  ECFE  F004         	call	_Read_ADC
   962  0008F4  C001  F009         	movff	?_Read_ADC,LDR_Result@ldr
   963  0008F8  C002  F00A         	movff	?_Read_ADC+1,LDR_Result@ldr+1
   964                           
   965                           ;ADC.h: 109: k= DisplayResult(ldr);
   966  0008FC  C009  F007         	movff	LDR_Result@ldr,DisplayResult@ADCVal
   967  000900  C00A  F008         	movff	LDR_Result@ldr+1,DisplayResult@ADCVal+1
   968  000904  ECC8  F004         	call	_DisplayResult	;wreg free
   969  000908  C007  F013         	movff	?_DisplayResult,_k
   970  00090C  C008  F014         	movff	?_DisplayResult+1,_k+1
   971                           
   972                           ;ADC.h: 111: if(k<1705)
   973  000910  0EA9               	movlw	169
   974  000912  5C13               	subwf	_k,w,c
   975  000914  0E06               	movlw	6
   976  000916  5814               	subwfb	_k+1,w,c
   977  000918  B0D8               	btfsc	status,0,c
   978  00091A  D002               	goto	l68
   979                           
   980                           ;ADC.h: 112: {
   981                           ;ADC.h: 113: PORTCbits.RC1=1;
   982  00091C  8282               	bsf	3970,1,c	;volatile
   983                           
   984                           ;ADC.h: 114: }
   985  00091E  0012               	return	
   986  000920                     l68:
   987                           
   988                           ;ADC.h: 115: else
   989                           ;ADC.h: 116: {
   990                           ;ADC.h: 117: PORTCbits.RC1=0;
   991  000920  9282               	bcf	3970,1,c	;volatile
   992  000922  0012               	return	
   993  000924                     __end_of_LDR_Result:
   994                           	opt stack 0
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           postinc0	equ	0xFEE
  1000                           postdec1	equ	0xFE5
  1001                           fsr1l	equ	0xFE1
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _Read_ADC *****************
  1005 ;; Defined at:
  1006 ;;		line 87 in file "ADC.h"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  Ch              1    wreg     unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  Ch              1    2[COMRAM] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2    0[COMRAM] unsigned short 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2, status,0
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1020 ;;      Params:         2       0       0       0       0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1023 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1024 ;;Total ram usage:        3 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_LDR_Result
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text9
  1034  0009FC                     __ptext9:
  1035                           	opt stack 0
  1036  0009FC                     _Read_ADC:
  1037                           	opt stack 29
  1038                           
  1039                           ;incstack = 0
  1040                           ;Read_ADC@Ch stored from wreg
  1041  0009FC  6E03               	movwf	Read_ADC@Ch,c
  1042                           
  1043                           ;ADC.h: 89: ADCON0 = 0b00000001 | (Ch<<2);
  1044  0009FE  4403               	rlncf	Read_ADC@Ch,w,c
  1045  000A00  46E8               	rlncf	wreg,f,c
  1046  000A02  0BFC               	andlw	252
  1047  000A04  0901               	iorlw	1
  1048  000A06  6EC2               	movwf	4034,c	;volatile
  1049                           
  1050                           ;ADC.h: 90: GODONE = 1;
  1051  000A08  82C2               	bsf	4034,1,c	;volatile
  1052  000A0A                     l59:
  1053  000A0A  B2C2               	btfsc	4034,1,c	;volatile
  1054  000A0C  D7FE               	goto	l59
  1055                           
  1056                           ;ADC.h: 92: return ADRES;
  1057  000A0E  CFC3 F001          	movff	4035,?_Read_ADC	;volatile
  1058  000A12  CFC4 F002          	movff	4036,?_Read_ADC+1	;volatile
  1059  000A16  0012               	return		;funcret
  1060  000A18                     __end_of_Read_ADC:
  1061                           	opt stack 0
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec1	equ	0xFE5
  1069                           fsr1l	equ	0xFE1
  1070                           status	equ	0xFD8
  1071                           
  1072 ;; *************** function _DisplayResult *****************
  1073 ;; Defined at:
  1074 ;;		line 95 in file "ADC.h"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  ADCVal          2    6[COMRAM] unsigned short 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2    6[COMRAM] unsigned short 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         2       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    1
  1095 ;; This function calls:
  1096 ;;		___wmul
  1097 ;; This function is called by:
  1098 ;;		_LDR_Result
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text10
  1103  000990                     __ptext10:
  1104                           	opt stack 0
  1105  000990                     _DisplayResult:
  1106                           	opt stack 28
  1107                           
  1108                           ;ADC.h: 97: ADCVal = (5500/1024)*ADCVal;
  1109                           
  1110                           ;incstack = 0
  1111  000990  C007  F001         	movff	DisplayResult@ADCVal,___wmul@multiplier
  1112  000994  C008  F002         	movff	DisplayResult@ADCVal+1,___wmul@multiplier+1
  1113  000998  0E00               	movlw	0
  1114  00099A  6E04               	movwf	___wmul@multiplicand+1,c
  1115  00099C  0E05               	movlw	5
  1116  00099E  6E03               	movwf	___wmul@multiplicand,c
  1117  0009A0  ECDB  F004         	call	___wmul	;wreg free
  1118  0009A4  C001  F007         	movff	?___wmul,DisplayResult@ADCVal
  1119  0009A8  C002  F008         	movff	?___wmul+1,DisplayResult@ADCVal+1
  1120                           
  1121                           ;ADC.h: 98: return ADCVal;
  1122  0009AC  C007  F007         	movff	DisplayResult@ADCVal,?_DisplayResult
  1123  0009B0  C008  F008         	movff	DisplayResult@ADCVal+1,?_DisplayResult+1
  1124  0009B4  0012               	return	
  1125  0009B6                     __end_of_DisplayResult:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           postdec1	equ	0xFE5
  1134                           fsr1l	equ	0xFE1
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function ___wmul *****************
  1138 ;; Defined at:
  1139 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  multiplier      2    0[COMRAM] unsigned int 
  1142 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  product         2    4[COMRAM] unsigned int 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2    0[COMRAM] unsigned int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, prodl, prodh
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1154 ;;      Params:         4       0       0       0       0       0       0       0       0
  1155 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1157 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1158 ;;Total ram usage:        6 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_DisplayResult
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text11
  1168  0009B6                     __ptext11:
  1169                           	opt stack 0
  1170  0009B6                     ___wmul:
  1171                           	opt stack 28
  1172                           
  1173                           ;incstack = 0
  1174  0009B6  5001               	movf	___wmul@multiplier,w,c
  1175  0009B8  0203               	mulwf	___wmul@multiplicand,c
  1176  0009BA  CFF3 F005          	movff	prodl,___wmul@product
  1177  0009BE  CFF4 F006          	movff	prodh,___wmul@product+1
  1178  0009C2  5001               	movf	___wmul@multiplier,w,c
  1179  0009C4  0204               	mulwf	___wmul@multiplicand+1,c
  1180  0009C6  50F3               	movf	prodl,w,c
  1181  0009C8  2606               	addwf	___wmul@product+1,f,c
  1182  0009CA  5002               	movf	___wmul@multiplier+1,w,c
  1183  0009CC  0203               	mulwf	___wmul@multiplicand,c
  1184  0009CE  50F3               	movf	prodl,w,c
  1185  0009D0  2606               	addwf	___wmul@product+1,f,c
  1186  0009D2  C005  F001         	movff	___wmul@product,?___wmul
  1187  0009D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1188  0009DA  0012               	return	
  1189  0009DC                     __end_of___wmul:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           prodh	equ	0xFF4
  1196                           prodl	equ	0xFF3
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1l	equ	0xFE1
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _ADCInit *****************
  1204 ;; Defined at:
  1205 ;;		line 80 in file "ADC.h"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_LDR_Result
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text12
  1233  000A58                     __ptext12:
  1234                           	opt stack 0
  1235  000A58                     _ADCInit:
  1236                           	opt stack 29
  1237                           
  1238                           ;ADC.h: 82: TRISAbits.RA0= 1;
  1239                           
  1240                           ;incstack = 0
  1241  000A58  8092               	bsf	3986,0,c	;volatile
  1242                           
  1243                           ;ADC.h: 83: ADCON1 = 0b00001110;
  1244  000A5A  0E0E               	movlw	14
  1245  000A5C  6EC1               	movwf	4033,c	;volatile
  1246                           
  1247                           ;ADC.h: 84: ADCON2 = 0b10101110;
  1248  000A5E  0EAE               	movlw	174
  1249  000A60  6EC0               	movwf	4032,c	;volatile
  1250  000A62  0012               	return		;funcret
  1251  000A64                     __end_of_ADCInit:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           prodh	equ	0xFF4
  1258                           prodl	equ	0xFF3
  1259                           postinc0	equ	0xFEE
  1260                           wreg	equ	0xFE8
  1261                           postdec1	equ	0xFE5
  1262                           fsr1l	equ	0xFE1
  1263                           status	equ	0xFD8
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           prodh	equ	0xFF4
  1269                           prodl	equ	0xFF3
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           status	equ	0xFD8
  1275                           
  1276                           	psect	rparam
  1277  0000                     tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           postdec1	equ	0xFE5
  1286                           fsr1l	equ	0xFE1
  1287                           status	equ	0xFD8


Data Sizes:
    Strings     29
    Constant    0
    Data        4
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    String2	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    String1	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LDR_Result
    _mq3->_SendData
    _mq3->_SendInstruction
    _InitLCD->_SendInstruction
    _LDR_Result->_DisplayResult
    _DisplayResult->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     516
                         _LDR_Result
                                _con
                                _mq3
 ---------------------------------------------------------------------------------
 (1) _mq3                                                  1     1      0      75
                                              1 COMRAM     1     1      0
                            _InitLCD
                           _SendData
                    _SendInstruction
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendData                                             1     1      0      15
                                              0 COMRAM     1     1      0
                             _strobe
 ---------------------------------------------------------------------------------
 (2) _InitLCD                                              0     0      0      15
                    _SendInstruction
 ---------------------------------------------------------------------------------
 (2) _SendInstruction                                      1     1      0      15
                                              0 COMRAM     1     1      0
                             _strobe
 ---------------------------------------------------------------------------------
 (3) _strobe                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _con                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDR_Result                                           2     2      0     441
                                              8 COMRAM     2     2      0
                            _ADCInit
                      _DisplayResult
                           _Read_ADC
 ---------------------------------------------------------------------------------
 (2) _Read_ADC                                             3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _DisplayResult                                        2     0      2     396
                                              6 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDR_Result
     _ADCInit
     _DisplayResult
       ___wmul
     _Read_ADC
   _con
   _mq3
     _InitLCD
       _SendInstruction
         _strobe
     _SendData
       _strobe
     _SendInstruction
       _strobe
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      14       1       21.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      20        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Apr 18 20:25:06 2017

                       _i 000B                         _j 000D                         _k 0013  
                      l39 08E6                        l81 098E                        l59 0A0A  
                      l68 0920                        u40 08E6               __CFG_BOR$ON 000000  
     ___wmul@multiplicand 0003               __CFG_BORV$3 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
             __CFG_LVP$ON 000000               __CFG_WDT$ON 000000                       l732 08DC  
                     l724 08CA                       l830 0838                       l834 0844  
                     l842 086E                       l826 0830                       l772 0962  
                     l852 0894                       l838 0858                       l848 0880  
                     l786 0988                       l778 0976                       l892 0A32  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       _mq3 0820  
                     _con 0A18           __end_of_ADCInit 0A64                       wreg 000FE8  
            __CFG_FOSC$HS 000000                Read_ADC@Ch 0003                      ?_mq3 0001  
                    ?_con 0001                      STR_1 0801                      STR_2 0812  
                    _LATB 000F8A               ?_LDR_Result 0001                      _main 0A2E  
                    fsr1l 000FE1                      prodh 000FF4                      prodl 000FF3  
                    start 0000             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000010           __end_of_InitLCD 09FC                     ??_mq3 0002  
                   ??_con 0001             __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000  
                   ?_main 0001                     _ADRES 000FC3             __CFG_USBDIV$1 000000  
                   _TRISB 000F93             __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   _delay 095A                     tablat 000FF5                     status 000FD8  
          __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000           __initialization 0924  
            __end_of_main 0A3C          __end_of_Read_ADC 0A18                 ??_ADCInit 0001  
     __size_of_LDR_Result 003A          __end_of_SendData 0A4A                    ??_main 000B  
           __activetblptr 000001                    ?_delay 0001                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0                    _GODONE 007E11  
               ??_InitLCD 0002  __size_of_SendInstruction 000E            __CFG_XINST$OFF 000000  
                  ___wmul 09B6            __CFG_STVREN$ON 000000                    mq3@key 0002  
                  _strobe 08AC              __pdataCOMRAM 000F              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 094C             ___rparam_used 000001  
          __pcstackCOMRAM 0001             __end_of_delay 0990                   ??_delay 0001  
            ??_LDR_Result 0009                 ?_Read_ADC 0001                __pnvCOMRAM 0013  
               ?_SendData 0001     __end_of_DisplayResult 09B6                   ?___wmul 0001  
       ??_SendInstruction 0001                   _ADCInit 0A58                   ?_strobe 0001  
      __end_of_LDR_Result 0924                   _GO_DONE 007E11                ??_Read_ADC 0003  
         __CFG_VREGEN$OFF 000000                   _InitLCD 09DC                ??_SendData 0001  
                 __Hparam 0000                   __Lparam 0000                   _String1 000F  
                 _String2 0011           __size_of___wmul 0026              __psmallconst 0800  
                 __pcinit 0924                   __ramtop 0800                   __ptext0 0A2E  
                 __ptext1 0820                   __ptext2 095A                   __ptext3 0A3C  
                 __ptext4 09DC                   __ptext5 0A4A                   __ptext6 08AC  
                 __ptext7 0A18                   __ptext8 08EA                   __ptext9 09FC  
         __size_of_strobe 003E              __size_of_mq3 008C              __size_of_con 0016  
    end_of_initialization 094C                   postdec1 000FE5                   postinc0 000FEE  
               _PORTCbits 000F82                 _PORTDbits 000F83                 _TRISAbits 000F92  
               _TRISCbits 000F94                 _TRISDbits 000F95            __end_of___wmul 09DC  
           __pidataCOMRAM 0A64            __end_of_strobe 08EA       start_initialization 0924  
             __end_of_mq3 08AC               __end_of_con 0A2E           _SendInstruction 0A4A  
       __size_of_Read_ADC 001C         __size_of_SendData 000E                  ??___wmul 0005  
        __CFG_LPT1OSC$OFF 000000                  ?_ADCInit 0001                  ??_strobe 0001  
             __pbssCOMRAM 000B                  ?_InitLCD 0001           SendData@lcddata 0001  
  SendInstruction@command 0001               __smallconst 0800   __end_of_SendInstruction 0A58  
          __size_of_delay 0036    __size_of_DisplayResult 0026            ___wmul@product 0005  
                _LATDbits 000F8C          __CFG_WDTPS$32768 000000          __size_of_ADCInit 000C  
       ___wmul@multiplier 0001                 copy_data0 0940                  _Read_ADC 09FC  
     DisplayResult@ADCVal 0007                  _SendData 0A3C          __size_of_InitLCD 0020  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
           _DisplayResult 0990                  __ptext10 0990                  __ptext11 09B6  
                __ptext12 0A58          ?_SendInstruction 0001             __size_of_main 000E  
          ?_DisplayResult 0007             LDR_Result@ldr 0009     __CFG_CPUDIV$OSC1_PLL2 000000  
              _LDR_Result 08EA           ??_DisplayResult 0009  
